{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darek\\\\IdeaProjects\\\\guessing-game\\\\src\\\\ScoreList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreList = ({\n  username,\n  difficulty\n}) => {\n  _s();\n  const [scores, setScores] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  // Funkcja pomocnicza do formatowania daty\n  const formatDate = dateString => {\n    if (!dateString) return \"Brak daty\";\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat(\"pl-PL\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    }).format(date);\n  };\n\n  // Funkcja pobierająca wyniki z backendu\n  const fetchScores = () => {\n    axios.get(`http://localhost:8080/scores/filterByDate`, {\n      params: {\n        startDate,\n        endDate\n      }\n    }).then(response => {\n      setScores(response.data);\n    }).catch(error => {\n      console.error(\"Błąd podczas pobierania wyników:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Wyniki dla \", username, \" (\", difficulty, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Data pocz\\u0105tkowa: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Data ko\\u0144cowa: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchScores,\n        children: \"Filtruj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lp.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wynik\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: scores.map((score, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: score.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(score.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreList, \"Spl2mGZsQH7Q3+kdlOZMktK7PfM=\");\n_c = ScoreList;\nexport default ScoreList;\nvar _c;\n$RefreshReg$(_c, \"ScoreList\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ScoreList","username","difficulty","_s","scores","setScores","startDate","setStartDate","endDate","setEndDate","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","fetchScores","get","params","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","score","index","_c","$RefreshReg$"],"sources":["C:/Users/darek/IdeaProjects/guessing-game/src/ScoreList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ScoreList = ({ username, difficulty }) => {\r\n    const [scores, setScores] = useState([]);\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n\r\n    // Funkcja pomocnicza do formatowania daty\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return \"Brak daty\";\r\n        const date = new Date(dateString);\r\n        return new Intl.DateTimeFormat(\"pl-PL\", {\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n        }).format(date);\r\n    };\r\n\r\n    // Funkcja pobierająca wyniki z backendu\r\n    const fetchScores = () => {\r\n        axios\r\n            .get(`http://localhost:8080/scores/filterByDate`, {\r\n                params: {\r\n                    startDate,\r\n                    endDate,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setScores(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Błąd podczas pobierania wyników:\", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Wyniki dla {username} ({difficulty}):</h2>\r\n\r\n            {/* Formularz filtrowania po zakresie dat */}\r\n            <div>\r\n                <label>Data początkowa: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n                <label>Data końcowa: </label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n                <button onClick={fetchScores}>Filtruj</button>\r\n            </div>\r\n\r\n            {/* Tabela wyników */}\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Lp.</th>\r\n                    <th>Wynik</th>\r\n                    <th>Data</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {scores.map((score, index) => (\r\n                    <tr key={index}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{score.score}</td>\r\n                        <td>{formatDate(score.date)}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScoreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMc,UAAU,GAAIC,UAAU,IAAK;IAC/B,IAAI,CAACA,UAAU,EAAE,OAAO,WAAW;IACnC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAO,IAAIG,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MACpCC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACZ,CAAC,CAAC,CAACC,MAAM,CAACV,IAAI,CAAC;EACnB,CAAC;;EAED;EACA,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB1B,KAAK,CACA2B,GAAG,CAAC,2CAA2C,EAAE;MAC9CC,MAAM,EAAE;QACJnB,SAAS;QACTE;MACJ;IACJ,CAAC,CAAC,CACDkB,IAAI,CAAEC,QAAQ,IAAK;MAChBtB,SAAS,CAACsB,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CAAC;EACV,CAAC;EAED,oBACI/B,OAAA;IAAAiC,QAAA,gBACIjC,OAAA;MAAAiC,QAAA,GAAI,aAAW,EAAC/B,QAAQ,EAAC,IAAE,EAACC,UAAU,EAAC,IAAE;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG9CrC,OAAA;MAAAiC,QAAA,gBACIjC,OAAA;QAAAiC,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChCrC,OAAA;QACIsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhC,SAAU;QACjBiC,QAAQ,EAAGC,CAAC,IAAKjC,YAAY,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFrC,OAAA;QAAAiC,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7BrC,OAAA;QACIsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE9B,OAAQ;QACf+B,QAAQ,EAAGC,CAAC,IAAK/B,UAAU,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFrC,OAAA;QAAQ2C,OAAO,EAAEnB,WAAY;QAAAS,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAGNrC,OAAA;MAAAiC,QAAA,gBACIjC,OAAA;QAAAiC,QAAA,eACAjC,OAAA;UAAAiC,QAAA,gBACIjC,OAAA;YAAAiC,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZrC,OAAA;YAAAiC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdrC,OAAA;YAAAiC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRrC,OAAA;QAAAiC,QAAA,EACC5B,MAAM,CAACuC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB9C,OAAA;UAAAiC,QAAA,gBACIjC,OAAA;YAAAiC,QAAA,EAAKa,KAAK,GAAG;UAAC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBrC,OAAA;YAAAiC,QAAA,EAAKY,KAAK,CAACA;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBrC,OAAA;YAAAiC,QAAA,EAAKtB,UAAU,CAACkC,KAAK,CAAChC,IAAI;UAAC;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAH5BS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACjC,EAAA,CA9EIH,SAAS;AAAA8C,EAAA,GAAT9C,SAAS;AAgFf,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}